Cascading Style Sheets;
Usar devdocs.io es buena idea
Poner un style dentro de un tag de html se llama inline css
<body style="background-color: blue;">
Site para buscar colores https://colorhunt.co/
Esto se pone en <head> y se llama Internal CSS
  <style>
    body{                           //elijo el tag que quiero afectar, abro {
      background-color: #E3FDFD;    //elijo el atributo afectado + : y debe terminar en ;
    }                               //cierro }
  </style>
  
  Tags que se repiten varias veces en el code:
  <style>
    hr{
      background-color: white;
    }
  </style>
  No funciona porque el navegador por defecto estiliza algunos elementos.
  https://www.w3schools.com/cssref/css_default_values.asp
  Para que funcione, hay que sobreescribir el atribute
<style>
    hr{
      background-color: white;
      border-style: none;           //borra el estilo del borde, pero no deja color porque solo el borde tenia altura por default, para eso modificamos el height;
      height: 3.5px;
      width: 100px;
    }
  </style>
  Para hacerlo mas responsive a diferentes dispositivos, no es bueno utilizar valores fijos como px, sino usar %
/* */ Comentarios en css

Lo que tiene hacer Internal CSS, es que solo se aplica a la .html donde pongas en codigo, entonces para eso está el External CSS. 
Se crea una nueva carpeta con un nuevo archivo styles.css para que el navegador lo reconozca como archivo css.
Se borra el tag style de head en las paginas, y se pone un nuevo tag que se llama link, con rel="stylesheet" hsref="css/styles.css". Dentro de styles.css no va el tag styles

El orden de prioridades es Inline>Internal>External.


Sintaxis de css:

selector{
  property: value;
 }
 Se recomienda ordenar alfabeticamente las properties.
 
Si el selector es generico, afecta a todos esos elementos. Para hacerlos especificos se usan los class selectors, agregando un class attribute que permite diferenciar los elementos de html
class selector: 

.nombreClass{
  property: value;
 }
 
 Prioridad class>tag
 
id Selector attribute id="nombre"
#heading{
  color: blue;
 }
 
 Prioridad id>tag
 Los ID no se puede repetir, por eso no pueden ser genericos.
 
 Se puede usar mas de un class por elemento: class="broccoli circular";
 .broccoli hace algo,
 .circular otra cosa.
 No funciona con id, es super especifico.
 
 Pseudo class, cuando te desplazas (hover) sobre un tag, cambia.
 El más usado es :hover, por ejemplo img es un tag, pero img:hover es otro
 
img:hover {
  background-color: gold;
} /*esto es un pseudo class, cambia cuando, en este caso, deslizo el mouse*/
  
 
 En la consola de chrome, en la parte de styles, se puede codear sin que se guarde, para ver como quedarian los cambios 
 Se puede jugar con los bordes del body en la consola, supongo que con todos los elementos tambien.
 El responsable de que haya un margen superior que no se puede cambiar no es el body, sino el default del h1.

Cuando pones 0 en un value, no tenes porque especificar la unidad.

